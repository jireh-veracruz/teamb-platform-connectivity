name: connectivity ci

on:
    push:
        branches:
          - main
          - develop
          - 'feature/**'
          - 'custom/**'
    pull_request:
        branches:
          - main
          - develop
          - 'feature/**'
    workflow_dispatch:

jobs:

    # Firmware CI Pipeline
    firmware-ci-pipeline:
        runs-on: ubuntu-latest

        steps:
        - name: Checkout Code
          uses: actions/checkout@v4
          with:
            submodules: true

        - name: Initialize Submodules
          run: |
            git submodule update --init --recursive

        - name: Check for Source Code Changes
          uses: dorny/paths-filter@v2
          id: changes
          with:
            filters: |
              project:
                - 'source/**'

        - name: Download Docker Image
          run: |
            echo "ðŸ”§ TODO: No access in Azure Container Registry Yet"
        
        - name: Build Docker Image
          run: |
            docker build -t platform-builder .

        - name: Build Firmware
          # if: steps.changes.outputs.project == 'true'
          run: |
            docker run --rm \
              -v $PWD:/workspace \
              platform-builder \
              bash -c "set -e; scripts/build/run_build.sh && \
              find . -name '*.elf' -o -name '*.bin' -o -name '*.hex' -o -name '*.map' | xargs -I {} cp {} /build-output/ 2>/dev/null || true"
        
        - name: Run Unit Tests
          run: |
            docker run --rm \
              -v $PWD:/workspace \
              platform-builder \
              bash -c "scripts/build/run_test.sh"

        - name: Run Valgrind Memory Leak Check
          run: |
            docker run --rm \
              -v $PWD:/workspace \
              platform-builder \
              bash -c "cd /workspace/tests/mqtt/build && \
              valgrind --leak-check=full --show-leak-kinds=definite --quiet --error-exitcode=1 ./mqtt_tests 2>&1 | tee valgrind_report.txt && \
              echo '=== Valgrind Summary ===' && \
              grep -E '(LEAK SUMMARY|ERROR SUMMARY|definitely lost|All heap blocks)' valgrind_report.txt || echo 'No memory issues detected'"

        - name: Upload Test Reports
          uses: actions/upload-artifact@v4
          with:
            name: test-reports
            path: |
              tests/mqtt/build/valgrind_report.txt
            retention-days: 1
        
        - name: Run Cppcheck
          # if: steps.changes.outputs.project == 'true'
          run: |
            docker run --rm \
              -v $PWD:/workspace \
              platform-builder \
              bash -c "scripts/build/run_cppcheck.sh"

        - name: Run Cpplint
          run: |
            docker run --rm \
              -v $PWD:/workspace \
              platform-builder \
              bash -c "scripts/build/run_cpplint.sh"

        - name: Run Metrix++
          run: |
            docker run --rm \
              -v $PWD:/workspace \
              platform-builder \
              bash -c "scripts/build/run_metrix++.sh"
        
        - name: Upload Artifacts
          uses: actions/upload-artifact@v4
          with:
            name: connectivity-firmware
            path: |
              build/images/*
              build/cppcheck/cppcheck_*.log
              build/cpplint/cpplint_*.log
              build/metrix++/metrix++_*.log
              tests/mqtt/build/valgrind_report.txt
            retention-days: 1
