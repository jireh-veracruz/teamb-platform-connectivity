name: connectivity ci

on:
    push:
        branches: [ main, develop ]
    pull_request:
        branches: [ main, develop ]
    workflow_dispatch:

jobs:

    # Build firmware (only if tests pass)
    build-platform-firmware:
        # needs: run-tdd-tests  # Only run if TDD tests pass
        runs-on: ubuntu-latest

        steps:
        - name: Checkout Code
          uses: actions/checkout@v4
          with:
            submodules: true  # This ensures all submodules are initialized and update

        - name: Initialize Submodules
          run: |
            git submodule update --init --recursive

        - name: Check for Source Code Changes
          uses: dorny/paths-filter@v2
          id: changes
          with:
            filters: |
              project:
                - 'source/**'
        
        - name: Build Docker Image
          # if: steps.changes.outputs.project == 'true'
          run: |
            docker build -t platform-builder .

        - name: Build Firmware
          # if: steps.changes.outputs.project == 'true'
          run: |
            docker run --rm \
              -v $PWD:/workspace \
              platform-builder \
              bash -c "chmod +x scripts/run_build.sh && scripts/run_build.sh && \
              echo 'Copying connectivity build artifacts...' && \
              find . -name '*.elf' -o -name '*.bin' -o -name '*.hex' -o -name '*.map' | xargs -I {} cp {} /build-output/ 2>/dev/null || true"
        
        - name: Run Cppcheck
          # if: steps.changes.outputs.project == 'true'
          run: |
            docker run --rm \
              -v $PWD:/workspace \
              platform-builder \
              bash -c "scripts/run_cppcheck.sh"

        - name: Run Cpplint
          run: |
            docker run --rm \
              -v $PWD:/workspace \
              platform-builder \
              bash -c "scripts/run_cpplint.sh"

        - name: Run Metrix++
          run: |
            docker run --rm \
              -v $PWD:/workspace \
              platform-builder \
              bash -c "scripts/run_metrix++.sh"
        
        - name: Upload Artifacts
          uses: actions/upload-artifact@v4
          with:
            name: connectivity-firmware
            path: |
              build/images/*
              build/cppcheck/cppcheck_*.log
              build/cpplint/cpplint_*.log
              build/metrix++/metrix++_*.log
            retention-days: 1
